name: Clone, copy, and push cofi repo

on:
  push:
    branches: [ main ]
  repository_dispatch:
    types: [new_commit]

jobs:
  copy-repo:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v2

    - name: Checkout source repo (cofi)
      uses: actions/checkout@v2
      with:
        repository: 'inlab-geo/cofi'
        path: 'cofi'
    
    - name: Copy files to search engine
      run: |
        cp -R cofi/. pysearch_tool/cofi

    - name: Checkout source repo (espresso)
      uses: actions/checkout@v2
      with:
        repository: 'inlab-geo/espresso'
        path: 'espresso'
    
    - name: Copy files to search engine
      run: |
        cp -R espresso/. pysearch_tool/espresso

    - name: Checkout source repo (cofi-example)
      uses: actions/checkout@v2
      with:
        repository: 'inlab-geo/cofi-examples'
        path: 'cofi-examples'
    
    - name: Copy files to search engine
      run: |
        cp -R cofi-examples/. pysearch_tool/cofi-examples


    - name: Checkout target repo
      uses: actions/checkout@v2
      with:
        repository: 'Denghu-JI/AWS-app-hosting'
        token: ${{ secrets.PAT }} 
        path: 'target-repo'

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt 

    - name: Run the script and generate JSON files
      run: |
        python main.py  # Modify this if your script is in a different location

    - name: Move generated JSON files to target repo
      run: |
        mv *.json target-repo/public 
        
    - name: Check for changes
      id: changes
      run: |
        git diff --quiet || echo "changes_detected=true" >> $GITHUB_ENV
    

    - name: Commit and push
      working-directory: 'target-repo'
      run: |
        if [[ "${{ env.changes_detected }}" == "true" ]]; then
          git config user.email "denghu.ji7201@gmail.com"
          git config user.name "Auto-reaction-update"
          git add public/*.json
          git commit -m "Added JSON files"
          git push
        else
          echo "No changes to push"
          exit 0
        fi
